name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    name: 🛠️ Build and test
    uses: ./.github/workflows/build-and-test.yml
    permissions:
      contents: read

  release:
    name: 🚀 Release packages
    runs-on: ubuntu-latest
    needs:
      - build_and_test
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          fetch-depth: 0

      - name: Setup monorepo
        uses: ./.github/actions/setup-monorepo

      - name: Write release status
        id: release_status
        run: |
          pnpm changeset status --output release.json 2> /dev/null || true
          HAS_RELEASE="$(node scripts/has-release-prepared.cjs)"
          if [ -f release.json ]; then
            cat release.json
          fi

          echo ""
          echo "has release $HAS_RELEASE"
          echo "has-changeset=$HAS_RELEASE" >> $GITHUB_OUTPUT

      - name: Build packages
        if: ${{ steps.release_status.outputs.has-changeset == 'true' }}
        run: pnpm build:packages

      - name: Release packages
        if: ${{ steps.release_status.outputs.has-changeset == 'true' }}
        run: |
          pnpm changeset version
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          node scripts/update-package-readmes.cjs
          pnpm changeset publish --no-git-tag
          rm .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Tag release
        if: ${{ steps.release_status.outputs.has-changeset == 'true' }}
        run: |
          node scripts/tag-release-packages.cjs
          git push origin --tags

      - name: Create GitHub releases
        if: ${{ steps.release_status.outputs.has-changeset == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/create-github-releases.cjs

      - name: Commit changes
        if: ${{ steps.release_status.outputs.has-changeset == 'true' }}
        env:
          CI_COMMIT_MESSAGE: "chore: release packages [skip ci]"
          CI_COMMIT_AUTHOR: 🤖 Mocky Balboa CI bot
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "ci-bot@noreply.mockybalboa.com"
          git add .changeset/ packages/*/CHANGELOG.md packages/*/package.json
          STAGED_FILE_COUNT=$(git diff --name-only --cached | wc -l | awk '{print $1}')
          if [ "$STAGED_FILE_COUNT" -eq 0 ]; then exit 0; fi
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push origin main

  build_and_deploy_docs:
    name: 📖 Build and deploy docs
    runs-on: ubuntu-latest
    needs:
      - build_and_test
      - release
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          fetch-depth: 0

      - name: Setup monorepo
        uses: ./.github/actions/setup-monorepo

      - name: Build packages
        run: pnpm build:packages

      - name: Build docs
        run: pnpm --filter "@mocky-balboa/docs-mockybalboa-com" --filter "@mocky-balboa/docs-api-reference.mockybalboa.com" run build

      - name: Deploy docs.mockybalboa.com
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./sites/docs.mockybalboa.com/build --project-name=mocky-balboa
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy api-reference.mockybalboa.com
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./sites/api-reference.mockybalboa.com/docs --project-name=mocky-balboa-api-reference
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}